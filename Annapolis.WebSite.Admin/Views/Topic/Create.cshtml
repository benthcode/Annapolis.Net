@model Annapolis.WebSite.Admin.Models.ContentTopic

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>ContentTopic</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.OriginalTitle)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.OriginalTitle)
            @Html.ValidationMessageFor(model => model.OriginalTitle)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SubTitle)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SubTitle)
            @Html.ValidationMessageFor(model => model.SubTitle)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.OriginalSubTitle)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.OriginalSubTitle)
            @Html.ValidationMessageFor(model => model.OriginalSubTitle)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TitleUrl)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TitleUrl)
            @Html.ValidationMessageFor(model => model.TitleUrl)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Thumbnail)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Thumbnail)
            @Html.ValidationMessageFor(model => model.Thumbnail)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsSticky)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsSticky)
            @Html.ValidationMessageFor(model => model.IsSticky)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsLocked)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsLocked)
            @Html.ValidationMessageFor(model => model.IsLocked)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsHidden)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsHidden)
            @Html.ValidationMessageFor(model => model.IsHidden)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CreateTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CreateTime)
            @Html.ValidationMessageFor(model => model.CreateTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LastUpdateTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastUpdateTime)
            @Html.ValidationMessageFor(model => model.LastUpdateTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ThreadId, "ContentThread")
        </div>
        <div class="editor-field">
            @Html.DropDownList("ThreadId", String.Empty)
            @Html.ValidationMessageFor(model => model.ThreadId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UserId, "MemberUser")
        </div>
        <div class="editor-field">
            @Html.DropDownList("UserId", String.Empty)
            @Html.ValidationMessageFor(model => model.UserId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Key)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Key)
            @Html.ValidationMessageFor(model => model.Key)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FirstCommentId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FirstCommentId)
            @Html.ValidationMessageFor(model => model.FirstCommentId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LastCommentId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastCommentId)
            @Html.ValidationMessageFor(model => model.LastCommentId)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
