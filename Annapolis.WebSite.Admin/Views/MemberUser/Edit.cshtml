@model Annapolis.WebSite.Admin.Models.MemberUser

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>MemberUser</legend>

        @Html.HiddenFor(model => model.Id)

        <div class="editor-label">
            @Html.LabelFor(model => model.UserName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserName)
            @Html.ValidationMessageFor(model => model.UserName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.RegisterEmail)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.RegisterEmail)
            @Html.ValidationMessageFor(model => model.RegisterEmail)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ContactEmail)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ContactEmail)
            @Html.ValidationMessageFor(model => model.ContactEmail)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Password)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Password)
            @Html.ValidationMessageFor(model => model.Password)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PasswordSalt)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PasswordSalt)
            @Html.ValidationMessageFor(model => model.PasswordSalt)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Token)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Token)
            @Html.ValidationMessageFor(model => model.Token)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TokenGeneratedTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TokenGeneratedTime)
            @Html.ValidationMessageFor(model => model.TokenGeneratedTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PasswordQuestion)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PasswordQuestion)
            @Html.ValidationMessageFor(model => model.PasswordQuestion)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PasswordAnswer)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PasswordAnswer)
            @Html.ValidationMessageFor(model => model.PasswordAnswer)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FailedPasswordAttemptCount)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FailedPasswordAttemptCount)
            @Html.ValidationMessageFor(model => model.FailedPasswordAttemptCount)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FailedPasswordAnswerAttemptCount)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FailedPasswordAnswerAttemptCount)
            @Html.ValidationMessageFor(model => model.FailedPasswordAnswerAttemptCount)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsApproved)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsApproved)
            @Html.ValidationMessageFor(model => model.IsApproved)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsLockedOut)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsLockedOut)
            @Html.ValidationMessageFor(model => model.IsLockedOut)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CreateDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CreateDate)
            @Html.ValidationMessageFor(model => model.CreateDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LastLoginDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastLoginDate)
            @Html.ValidationMessageFor(model => model.LastLoginDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LastPasswordChangedDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastPasswordChangedDate)
            @Html.ValidationMessageFor(model => model.LastPasswordChangedDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LastLockoutDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastLockoutDate)
            @Html.ValidationMessageFor(model => model.LastLockoutDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LastActivityDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastActivityDate)
            @Html.ValidationMessageFor(model => model.LastActivityDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LoginIdExpiresDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LoginIdExpiresDate)
            @Html.ValidationMessageFor(model => model.LoginIdExpiresDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.BirthDay)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.BirthDay)
            @Html.ValidationMessageFor(model => model.BirthDay)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Avatar)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Avatar)
            @Html.ValidationMessageFor(model => model.Avatar)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Comment)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Comment)
            @Html.ValidationMessageFor(model => model.Comment)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Signature)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Signature)
            @Html.ValidationMessageFor(model => model.Signature)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Location)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Location)
            @Html.ValidationMessageFor(model => model.Location)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PersonalWebsite)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PersonalWebsite)
            @Html.ValidationMessageFor(model => model.PersonalWebsite)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Credit)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Credit)
            @Html.ValidationMessageFor(model => model.Credit)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsExternalAccount)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsExternalAccount)
            @Html.ValidationMessageFor(model => model.IsExternalAccount)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ExternalAccessId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ExternalAccessId)
            @Html.ValidationMessageFor(model => model.ExternalAccessId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.OpenId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.OpenId)
            @Html.ValidationMessageFor(model => model.OpenId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ExternalAccessToken)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ExternalAccessToken)
            @Html.ValidationMessageFor(model => model.ExternalAccessToken)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DisableEmailNotifications)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DisableEmailNotifications)
            @Html.ValidationMessageFor(model => model.DisableEmailNotifications)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DisableComment)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DisableComment)
            @Html.ValidationMessageFor(model => model.DisableComment)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DisablePrivateMessages)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DisablePrivateMessages)
            @Html.ValidationMessageFor(model => model.DisablePrivateMessages)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DisableFileUploads)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DisableFileUploads)
            @Html.ValidationMessageFor(model => model.DisableFileUploads)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Latitude)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Latitude)
            @Html.ValidationMessageFor(model => model.Latitude)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Longitude)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Longitude)
            @Html.ValidationMessageFor(model => model.Longitude)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.RoleId, "MemberRole")
        </div>
        <div class="editor-field">
            @Html.DropDownList("RoleId")
            @Html.ValidationMessageFor(model => model.RoleId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Key)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Key)
            @Html.ValidationMessageFor(model => model.Key)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
