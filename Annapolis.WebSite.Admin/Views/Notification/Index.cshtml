@model IEnumerable<Annapolis.WebSite.Admin.Models.Setting>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsDefault)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.HomePageController)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.HomePageAction)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ForumName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ForumUrl)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsClosed)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Theme)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Skin)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SMTPHost)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SMTPPort)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SMTPUsername)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SMTPPassword)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SMTPEnableSSL)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AdminEmailAddress)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EmailSendOnNewUser)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EmailVerifyOnNewUser)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EnableSocialLogins)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AutoApproveNewMember)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TopicsPerPage)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CommentsPerPage)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UploadFileRootPath)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UpdoadFilePathHashLevel)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UploadImageFileExtension)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UploadImageFileOrginalMaxByteSize)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UploadImageFileMaxByteSize)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UploadImageFileMaxWidth)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UploadImageFileMaxHeight)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UploadDocumentFileExtension)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UploadDocumentFileMaxByteSize)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UploadFlashFileExtension)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UploadFlashFileMaxByteSize)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UploadMediaFileExtension)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UploadMediaFileMaxByteSize)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UploadThumbnailPath)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UploadThumbnailFileMaxByteSize)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UploadThumbnailWidth)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UploadThumbnailHeight)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BannedWordReplaceHolder)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MemberUser.UserName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MemberRole.RoleName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LocaleLanguage.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Key)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsDefault)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.HomePageController)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.HomePageAction)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ForumName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ForumUrl)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsClosed)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Theme)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Skin)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SMTPHost)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SMTPPort)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SMTPUsername)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SMTPPassword)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SMTPEnableSSL)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AdminEmailAddress)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EmailSendOnNewUser)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EmailVerifyOnNewUser)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EnableSocialLogins)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AutoApproveNewMember)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TopicsPerPage)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CommentsPerPage)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UploadFileRootPath)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UpdoadFilePathHashLevel)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UploadImageFileExtension)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UploadImageFileOrginalMaxByteSize)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UploadImageFileMaxByteSize)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UploadImageFileMaxWidth)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UploadImageFileMaxHeight)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UploadDocumentFileExtension)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UploadDocumentFileMaxByteSize)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UploadFlashFileExtension)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UploadFlashFileMaxByteSize)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UploadMediaFileExtension)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UploadMediaFileMaxByteSize)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UploadThumbnailPath)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UploadThumbnailFileMaxByteSize)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UploadThumbnailWidth)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UploadThumbnailHeight)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BannedWordReplaceHolder)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MemberUser.UserName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MemberRole.RoleName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LocaleLanguage.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Key)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>
